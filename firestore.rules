rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users - public profile viewing with field validation
    match /users/{userId} {
      allow read: if true; // âœ… Allows public access for profile viewing
      allow write: if request.auth != null && 
                   request.auth.uid == userId &&
                   request.resource.data.keys().hasAll(['email', 'createdAt']) &&
                   (!('username' in request.resource.data) || 
                    request.resource.data.username.matches('^[a-z0-9]{3,}$'));
    }
    
    // Usernames - public username checks with validation  
    match /usernames/{username} {
      allow read: if true; // âœ… Allows public access for username checking
      allow create: if request.auth != null && 
                   request.auth.uid == request.resource.data.userId &&
                   username.matches('^[a-z0-9]{3,}$'); // Enforce username format
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // ðŸ”§ CHANGE THIS: Allow public reading of frames
    match /frames/{frameId} {
      allow read: if true; // Changed: Now allows guest users to see frames
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }
    
    // All other documents require authentication but are read-only by default
    match /{document=**} {
      allow read: if request.auth != null;
    }
  }
}